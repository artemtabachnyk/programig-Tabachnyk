Звіт

	Табачник Артем Анатолійович
	Група: КН-922В
	Лабораторна робота: №5
	Тема роботи: створення програми на мові С
        Визначити просте чи складене число за допомогою циклів




Хід роботи



	1. Створення папки з кодом програми 
         
        За допомогою команд копіюэмо потрібні файли до нашого репозиторію 
          sudo cp programig-Tabachnyk/lab04/Makefile programig-Tabachnyk/lab05
          sudo cp programig-Tabachnyk/lab05/README.md programig-Tabachnyk/lab05
        та за допомогою таких команд створюэмо потрібні нам репозиторії та документи
          mkdir lab04/src
          mkdir lab04/doc
          touch lab04/src/main.c
          touch lab04/doc/lab04.txt
        В нас виходе ось такий репозиторій для лабораторної роботи

        ├── Makefile
        ├── README.md
        ├── doc
        │ └── lab05.txt
        └── src
          └── main.c


	2. Написання коду програми 
           Треба зайти в main.c та написати код програми для задачі "Визначити просте чи складене число"
           
#include <stdio.h>
int main()
{
        int aaa = 12, yyy = 0, iii = 1; // Об'явити змінні
        if (aaa > 1) // програма працює якщо введені дані більше 1
        {
                //    do {
                if (aaa % iii == 0) // якщо задане число ділиться на дільник без остачі
                {
                        yyy++; // то кількість дільників збільшити на 1
                }
                iii++;
                //    } while ( iii <= aaa );
                while (iii <= aaa) {
                        if (aaa % iii == 0) // якщо задане число ділиться на дільник без остачі
                        {
                                yyy++; // то кількість дільників збільшити на 1
                        }
                        iii++;
                }
                //for (iii <= aaa; iii++) //цикл опрацювання дільників
                {
                        if (aaa % iii == 0) // якщо задане число ділиться на дільник без остачі
                        {
                                yyy++; // то кількість дільників збільшуємо на 1
                        }
                } //
                if (aaa == 2) // якщо кількість дільників дорівнює 2
                        printf("Просте"); // то вивести на екран, що воно просте
                else // якщо ні то
                        printf("Складене"); // то вивесте на екран, що воно Складене
        }
        return 0;
}

	 опис роботи основної функції: Число 14 ділитиметься на змінну доти, доки ця змінна не дорівнюватиме діленому. Спочатку змінна дорівнює одному, а потім стане рівною 14. Якщо кількість дільників дорівнює двом, то вивести на екран, що воно просте. Якщо ні, то вивесте на екран, що воно Складене.   
   - перелік вхідних даних:  
   - aaa - число 14, яке ми будемо перевіряти, позитивнe дійснe числo (int);  
   - yyy - кількість дільників, яку показує просте або складне число, позитивні дійсні числа (int);  
   - iii - дільник, який збільшуватиметься доти, доки не дорівнюватиме діленому, позитивнe дійснe числo (int).   
- дослідження результатів роботи програми:  
   - 12 - це складне число, але щоб це довести, потрібно знайти його дільники. Ділити треба на число 1, яке з кожним колом циклу зростатиме на один доти, доки не дорівнюватиме 12. У підсумку дільників буде 4: 1, 2, 6,12 . А оскільки їх більше ніж 2, то тому число 12 - складне.  	

	3.Прокомпілювати программу та отримати виконуючий файл
            За допомогою команди sudo make all виконуємо компіляцію та отримуємо виконуючий файл main.bin в новому репозиторію dist
             Тепер наш репозиторій повинен виглядати так:
	├── Makefile
        ├── README.md
        ├── dist
        │   └── main.bin
        ├── doc
        │   └── lab04.txt
        └── src
             └── main.c	

	4. За допомогою дебагера lldb запускаємо виконуючий файл main.bin та засвідчуємося що він не видвє помилок
	5. Завантажуємо командою git push зміни на гітхаб
	

        Висновок: при виконанні лабораторної роботи буди набуті практичні навички створення програм, що з циклічною конструкцією на мові С, зокрема: визначити просте або складне число.
	
