Звіт

	Табачник Артем Анатолійович
	Група: КН-922В
	Лабораторна робота: №7
	Тема роботи: Переробити програми, що були розроблені під час виконання лабораторних робіт з тем "Масиви" та "Цикли" таким чином, 
        щоб використовувалися функції для обчислення результату.
        



Хід роботи



	1. Створення папки з кодом програми 
         
        За допомогою команд копіюэмо потрібні файли до нашого репозиторію 
          sudo cp programig-Tabachnyk/lab06/Makefile programig-Tabachnyk/lab07
          sudo cp programig-Tabachnyk/lab06/README.md programig-Tabachnyk/lab07
        та за допомогою таких команд створюэмо потрібні нам репозиторії та документи
          mkdir lab07/src
          mkdir lab07/doc
          touch lab07/src/main.c
          touch lab07/doc/lab04.txt
        В нас виходе ось такий репозиторій для лабораторної роботи

        ├── Makefile
        ├── README.md
        ├── doc
        │ └── lab07.txt
        └── src
          └── main.c


	2. Написання коду програми 
           Треба зайти в main.c та написати код програми для заданої задачі
#include <stdio.h>
int random();             //  Вводимо функцію яка видає рандомне ціле число 
int time();               //  Вводимо функції за допомогою яких рандомне число прив'яжемо до системного часу 
int srand();               
//int findFibonachi(){      //Фунція в якій буде виконуватися основна дія(Шукання чисел Фібоначчі)-код ЛАБОРАТОРНОЇ РОБОТИ №6 
//    srand (time(NULL));             // Генеруємо рандомне число яке прив'язано до системного часу 
//    int Num = random() % 10 + 10 ;  // Так як ми прив'язуємо рандомне число до розміру масиву, для зручності програми, обмежуємо діапазон від 10 до 20
//    int arr [Num] ;                 // Прив'язуємо раномне число до розміру масиву
//    printf("Сгенероване число %d\n", Num );    // Для зручності виводимо сгенероване число на екран
//    while (1)                                 //початок циклу
    //{
//        int xxx, yyy, zzz, ccc, iii;  //Вводимо змінні
//        xxx = 0;     //Задаємо  початкові значення змінних
//        yyy = 1;
//        ccc = 0; 

//            do 
//            {                         // Початок виконання цикла
//                arr[ccc] = xxx;       //Записуємо в 0 елемент масива число, а потім дії продовжуються
//                ccc += 1;             //з кожним повторенням цикла елемент масива буде збільшуватися на 1 
//                zzz = xxx + yyy;      //В цій дії буде обчислюватися кожен раз число Фібоначчі
//                xxx = yyy;           //А в цих діях число записується для обчислення наступного числа Фібоначчі
//                yyy = zzz;

//            } while (xxx < 10000);   // Обмежуємо пошук чисел Фібоначчі до 10000

//            for(iii=0;iii<Num;iii++) //Виводимо на екран масив arr з рандомним розміром
//            {
//                printf(" %d", arr[iii]); 
//            }
//            return 0;
//    } 
//}

//void main()                        // Головна фунція main, в якій записаний виклик функції, де знаходиться числа Фібоначчі 
//{
                      
//    findFibonachi();
//}

int number (int xxx)        // Фунція в якій буде виконуватися основна дія(Шукати просте чи складене число)-код для ЛАБОРАТОРНОЇ РОБОТИ №5
{
        int aaa = 12, yyy = 0, iii = 1; // Об'явити змінні
        if (aaa > 1) // програма працює якщо введені дані більше 1
        {
                //    do {
                if (aaa % iii == 0) // якщо задане число ділиться на дільник без остачі
                {
                        yyy++; // то кількість дільників збільшити на 1
                }
                iii++;
                //  } while ( iii <= aaa );
                while (iii <= aaa) {
                        if (aaa % iii == 0) // якщо задане число ділиться на дільник без остачі
                        {
                                yyy++; // то кількість дільників збільшити на 1
                        }
                        iii++;
                }
                //for (iii <= aaa; iii++) //цикл опрацювання дільників
                {
                        if (aaa % iii == 0) // якщо задане число ділиться на дільник без остачі
                        {
                                yyy++; // то кількість дільників збільшуємо на 1
                        }
                } //
                if (aaa == 2) // якщо кількість дільників дорівнює 2
                        printf("\nПросте"); // то вивести на екран, що воно просте
                else // якщо ні то
                        printf("\nСкладене"); // то вивесте на екран, що воно Складене
        }
        return 0;
}
int main()                 // Основна функція main
{  
    int xxx;               // Вводимо змінну ххх яке буде передаватися в функцію number для виконання задачі 
   
    int ggg;                             
    printf("Введіть число 1 або 2 ");    // Тут ми вибираємо спосіб роботи программи 
    scanf("%d", &ggg);  
      
    switch(ggg){                            // В залежності від обраного числа буде виконуватися певний спосіб роботи
        case 1:                             // В 1 способі користувач самостійно обирає число 
            printf("Вводить число ");  
            scanf("%d", &xxx);  
            number(xxx);  
            break;  
        case 2:                            // В 2 способі число генерується рандомно від 0 до 1000
            srand (time(NULL));  
            xxx = random()%1000;  
            printf("Сгенерированное число %d\n", xxx);  
            number(xxx);  
            break;  
        default :          // Якщо користувач неправильно ввів данні та не вибрав спосіб роботи программи то программа використає данні за замовчуванням
            printf("Неправильно введені данні, ми використоємо данні за замовчуванням,число = 12");   
            number(xxx);
            break;  
    }  
      
 return 0;  
  
}


 
      опис роботи основної функції: В цьому коді є 2 программи, перща - це перероблена 6 лабораторна робота(вона закоментована), а 2-це перероблена 5 лабораторна робота вона не закоментована.   
   - перелік вхідних даних:  
   - int findFibonachi - функція яка відповідає за роботу переробленогу коду 6 лабораторної роботи
   - void main - головна функція переробленого коду 6 Лабораторної
   - int number - функція яка відповідає за роботу переробленогу коду 5 лабораторної роботи
   - int main - головна функція переробленого коду 6 Лабораторної
   
- дослідження результатів роботи програми: В цій программі користувач може вибрати сам спосіб роботи програми, є 2 основних способа це рандомне число, або ж задане ним вручну, якщо користувач вибере неправильний спосіб роботи програми
то вона буде використовувати Данні за замовчуванням.
      Зміни в кодах лабораторних робіт:
     
      Лабораторна робота №5
      В лабораторній роботі №5, користувач тепер має змогу вибирати сам який спосіб роботи він хоче отримати від програми, є 3 способи.Також тепер в цій лабораторній роботі використовуються 2 фунції:number-
      де йдуть розрахунки та головна-main.
      1.Користувач сам введе данні
      2.Данні введуться рандомно
      3.Данні будуть використані за замовчуванням
  
      Лабораторна робота №6
      В лабораторній роботі №6, тепер використовується рандомне значення обсягу масиву, адже, числа Фібоначчі є сталими, а не рандомними і більше рандомну функцію в цій лабораторній роботі немає де примінити.
      Також тепер в цій лабораторній роботі використовуються 2 функції: int findFibonachi- це функція де йдуть розрахунки та функція main-головна.
      
      
  	
      3.Прокомпілювати программу та отримати виконуючий файл
            За допомогою команди sudo make all виконуємо компіляцію та отримуємо виконуючий файл main.bin в новому репозиторію dist
             Тепер наш репозиторій повинен виглядати так:
	├── Makefile
        ├── README.md
        ├── dist
        │   └── main.bin
        ├── doc
        │   └── lab07.txt
        └── src
             └── main.c	

	4. За допомогою дебагера lldb запускаємо виконуючий файл main.bin та засвідчуємося що він не видає помилок
	5. Завантажуємо командою git push зміни на гітхаб
	

        Висновок: В цій лабораторній роботі ми здобули навички роботи з кількома фунціями, та рандомною функцією, яка допомагає отримати нам рандомне число.
	
